#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <map>
#include <unordered_set>
#include <math.h>
#include <list>
#include <queue>
//#include <iomanip>
//#include <string.h>
//#include <queue>
//#include <stack>
//#include <numeric>
//#include <unordered_map>
#define ll long long int
//#define ull unsigned long long int
#define mod 1000000007
//#define loop(n) for(int i = 1;i<=n;i++) cout<<seats[i]<<" ";
//#define loopIN(n) for(int i = 0;i<n;i++) cin>>arr[i];
//#define nextln cout<<"\n";
using namespace std;

//void solve(){
//    ll n,m,k;
//    cin>>n>>m>>k;
//    
//    vector<vector<char> > vec(n,vector<char>(m));
//    char arr[n][m];
//    memset(arr,'0',sizeof arr);
//    for(int i = 0;i<n;i++){
//        for(int j = 0;j<m;j++){
//            cin>>vec[i][j];
//            }
//        }
//        
//        for(int i = n-1;i>=0;i--){
//            for(int j = m-1;j>=0;j--){
//                if(vec[i][j] == '*'){
//                    int r = i-1,c = j-1,size_tick_r = 0,size_tick_c = 0;
//                    while(true){
//                        if(r<0 || c>=n) break;
//                        if(vec[r][c] == '*'){
//                            arr[r][c] = '1';
//                            size_tick_r++;
//                            }
//                            else break;
//                            r--;
//                            c++;
//                        }
//                        r = i-1,c = j-1;
//                        while(true){
//                            if(r<0 || c<0) break;
//                            if(tick_size_c == tick_size_r) break;
//                            if(vec[r][c] == '*'){
//                                arr[r][c] = '1';
//                                size_tick_c++;
//                                }
//                                else break;
//                                r--;
//                                c--;
//                            }
//                    }
//                }
//            }
//    }

void solve(){
    ll n;
    cin>>n;
    vector<ll> vec(n);
    priority_queue<pair<int,int> > p;
    vector<pair<int,int> > ans;
    for(int i = 0;i<n;i++){
        int ele;
        cin>>ele;
        if(ele!=0) p.push({ele,i+1});
        }
        
        while(true){
            if(p.size() <= 1) break;
//            cout<<p.size()<<endl;
            pair<int,int> first = p.top();
            p.pop();
            pair<int,int> second = p.top();
            p.pop();
            
            ll times1 = first.first;
            ll times2 = second.first;
//            cout<<times1<<" "<<times2<<endl;
            ll f = first.second;
            ll s = second.second;
            ans.push_back({f,s});
            if(times1 > 1){
                times1--;
                p.push({times1,first.second});
                }
                if(times2>1){
                    times2--;
                    p.push({times2,second.second});
                    }
            }
        
        
        cout<<ans.size()<<endl;
        for(auto it : ans){
            cout<<it.first<<" "<<it.second<<endl;
            }
            
            return;
    }
int main(){
ios::sync_with_stdio(false);
cin.tie(0);    
ll t = 1;
cin>>t;
for(int i = 1;i<=t;i++){
solve();
}

return 0;
}
