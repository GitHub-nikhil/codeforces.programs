#include <iostream>
#include <algorithm>
#include <vector>
#include <set>
#include <queue>
#include <map>
#include <unordered_map>
#include <math.h>
#include <unordered_set>
//#include <string>
//#include <list>
//#include <iomanip>
//#include <queue>
//#include <stack>
//#include <numeric>
#define ll long long int
#define ull unsigned long long int
#define mod 1000000000
//#define loop(n) for(int i = 1;i<=n;i++) cout<<seats[i]<<" ";
//#define loopIN(n) for(int i = 0;i<n;i++) cin>>arr[i];
//#define nextln cout<<"\n";
using namespace std;
unordered_set<ll> st;
vector<ll> first;
vector<ll> second;

void f(){
    ll curr = 1;
    while(true){
        ll sq = curr*curr;
        ll cb = curr*curr*curr;
        
        if(sq>mod) break;
        if(cb<=mod) second.push_back(cb);
        st.insert(cb);
        if(st.find(sq) == st.end()){
            first.push_back(sq);
            }
            curr++;
        }
    }
    
void solve(){
    ll n,ans = 0;
    cin>>n;
//    cout<<first[0]<<" "<<second[0]<<endl;
//    return;
    auto it = lower_bound(first.begin(),first.end(),n)-first.begin();
    auto it1 = lower_bound(second.begin(),second.end(),n)-second.begin();
    
    
    if(it == first.size() || first[it]>n) ans+=it;
    else ans+=it+1;
    if(it1 == second.size() || second[it1]>n) ans+=it1;
    else ans+=it1+1;
    
    cout<<ans<<endl;
    
    return;
    }
    
int main(){
ios::sync_with_stdio(false);
cin.tie(0);
f();
ll t = 1;
cin>>t;
for(int i = 1;i<=t;i++){
solve();
}

return 0;
}
